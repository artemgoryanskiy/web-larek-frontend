/**
 * Базовый интерфейс для компонента с представлением
 */
export interface IComponent {
	/**
	 * Монтирует компонент в указанный DOM-элемент
	 * @param container DOM-элемент, в который будет смонтирован компонент
	 */
	mount(container: HTMLElement): void;

	/**
	 * Размонтирует компонент и удаляет его из DOM
	 */
	unmount(): void;

	/**
	 * Инициализирует компонент и устанавливает обработчики событий
	 */
	init(): void;
}

/**
 * Базовый интерфейс для модели данных
 */
export interface IModel<T> {
	/**
	 * Текущее состояние модели
	 */
	readonly state: T;

	/**
	 * Событие обновления модели
	 * @param state новое состояние модели
	 */
	emitChanges(state?: Partial<T>): void;
}

/**
 * Базовый интерфейс для презентера
 */
export interface IPresenter {
	/**
	 * Инициализирует презентер и связывает модель с представлением
	 */
	init(): void;
}
